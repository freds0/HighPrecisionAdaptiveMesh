Changes in version 0.0.9-alpha
==============================

- added test programs

- added static_cast<>() in helper_ostream() function and implicit conversion
  operators

- added COPYING file with GNU GPL v3

- added/extended README file

- added static_cast<>() to several type_traits<>::get_a() functions to avoid
  warnings of VC++

- changed return type of comparison operators from bool to int to avoid warning
  of VC++

- removed dependency on <cstring> by hard-coding isdigit() and avoiding strcpy()

- added additional template argument (bool) to result_type2 and result_type3
  structs; users can overwrite the defaults after inclusion of real.hpp by
  adding a specialization, which has "true" for this argument (use with
  caution!)

- BUGFIX: operator>>(std::cin&, ..) did not check for EOF and bad stream states,
  which could lead to a stuck input operation; additionally, it consumed too
  many characters; added helper function to extract numbers from input stream
  with proper syntax check and silent errors (ios_base::failbit set for input
  stream instead of throwing an exception); improved exception safety
  [thanks to Frantisek Kluknavsky and Sylvain Corlay for reporting the bug]

- added third template argument (bool) to type_trait struct; users can overwrite
  the default type_traits after inclusion of real.hpp by adding a
  specialization, which has "true" for this argument (use with caution!)

- data member _x can be made public in mpfr::real by defining
  MPFR_REAL_DATA_PUBLIC (this is automatically enabled for VC++ as a workaround
  and should otherwise be used for debugging purposes only)

- added specialization for numeric_limits; some values cannot be reasonably
  set at compile time, because they require the calling of MPFR functions
  [thanks to Sylvain Corlay for this suggestion]

- added mathematical functions additionally to namespace std; this prevents
  problems when a user called functions with std:: prefix and wants to switch
  to mpfr::real; in some cases (functions that were preprocessor macros in
  math.h) the cmath functions are *only* available in namespace std, such that
  the prefix cannot even be avoided for doubles etc.
  the import to the namespace std can be prevented by defining the preprocessor
  macro MPFR_REAL_DISABLE_MATH_NS_STD
  this change required to define any functions with a single mpfr::real argument
  outside of the class mpfr::real and lead to a huge number of changed lines
  [thanks to Sylvain Corlay for this suggestion]

- added "dummy = dummy;" line in code of constructors to prevent warning from
  newer GCCs
  [thanks to Heinz van Saanen]

- improved logb function by using prefix operator--, which is more efficient

- inserted the preprocessor macro MPFR_NS before calls of MPFR library
  functions; setting this macro enables to overwrite the MPFR functions with
  functions from another namespace, e.g., for the purpose of debugging

- introduced preprocessor macros for default template arguments of the
  mpfr::real class and some functions (for C++0x); this way the defaults can be
  easily overwritten
  the names of the macros are: MPFR_REAL_CLASS_PREC_DFLT,
  MPFR_REAL_CLASS_RND_DFLT, MPFR_REAL_FUNC_PREC_DFLT, MPFR_REAL_FUNC_RND_DFLT

- BUGFIX: removed the type_trait (and, thus, the support) for wchar_t; this was
  important, because something was broken otherwise, but I do not remember what

- moved the definition of ostream operator<< to helper_ostream function; this
  will allow to precompile and link this big code block in the future instead
  of an inline usage

- any primitive types are no longer const as return types; this removes a
  warning of ICC

- BUGFIX: the first argument of the modf function was promoted correctly leading
  to an error at compile time, if a non-mpfr::real type was used; the promotion
  has been added

- the interfaces of functions without mpfr::real arguments was changed to
  improve the interoperability with different compiler; the functions are:
  zero, inf, nan, const_log2, const_pi, const_euler, const_catalan, factorial

- improved interoperability with VC++ checking for the _MSC_VER preprocessor;
  this way no separate header for VC++ is required anymore
  [thanks to Brian Gladman for this suggestion]

- BUGFIX: the MPFR type generated by the converting constructors and assigment
  operator was that of the source type and not the one corresponding to the
  mpfr::real class; this has been fixed

- the preprocessor macro REAL_ENABLE_CONVERSION_OPERATORS has been renamed to
  MPFR_REAL_ENABLE_CONV_OPS

- BUGFIX: the implicit conversion operator for std::string has been removed to
  avoid ambiguities in some cases

- a member function conv for conversion to std::string has been introduced

- change of the interface of the member functions conv for conversion to
  pointer-like types (char*, mpf_t, mpz_t, mpfr_t, mpf_ptr, mpz_ptr, mpfr_ptr):
  their argument is a reference now

- BUGFIX: the int type of the second argument of the scalbn function is cast to
  long int before passing to ldexp; this avoids errors due to ambiguities

Changes in version 0.0.2-alpha
==============================

- added abs function
  [thanks to Brian Gladman for this suggestion]

- published second header for VC++
  [thanks to Brian Gladman for his support and efforts]

Changes in version 0.0.1-alpha
==============================

- first release
